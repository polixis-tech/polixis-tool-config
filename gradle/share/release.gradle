/**
 * Configures the release management for typical Java library.
 *
 * Requires following plugins:
 *  - maven-publish
 *  - net.researchgate.release (Optional)
 *
 * Requires following properties or environment variables to be present:
 *  - NEXUS_USERNAME or nexusUsername
 *  - NEXUS_PASSWORD or nexusPassword
 *  - NEXUS_CONTEXT_URL or nexusContextUrl
 */

ext {
    isReleasePluginApplied = project.pluginManager.hasPlugin('net.researchgate.release')
    isJavaPluginApplied = project.pluginManager.hasPlugin('java')
    isJavaPlatformPluginApplied = project.pluginManager.hasPlugin('java-platform')
    isSnapshotVersion = project.version.endsWith('-SNAPSHOT')
    shouldPublishTests = ext.find('shouldPublishTests') ?: false
    shouldPublishTestSources = ext.find('shouldPublishTestSources') ?: false
}

project.ext['release.uploadAfterRelease'] = project.ext.find('release.uploadAfterRelease') ?: true

if (project.ext.isJavaPluginApplied) {
    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier = "sources"
    }

    task javadocJar(type: Jar) {
        from javadoc
        archiveClassifier = "javadoc"
    }

    if (project.ext.shouldPublishTests) {
        task testsJar(type: Jar) {
            from sourceSets.test.output.classesDirs
            archiveClassifier = "tests"
        }
    }

    if (project.ext.shouldPublishTestSources) {
        task testSourcesJar(type: Jar) {
            from sourceSets.test.allJava
            archiveClassifier = "test-sources"
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = project.name
            from project.ext.isJavaPlatformPluginApplied ? components.javaPlatform : components.java

            if (project.ext.isJavaPluginApplied) {
                artifact sourcesJar
                if (!project.ext.isSnapshotVersion) {
                    artifact javadocJar
                }

                if (project.ext.shouldPublishTests) {
                    artifact testsJar
                }

                if (project.ext.shouldPublishTestSources) {
                    artifact testSourcesJar
                }
            }
        }
    }

    repositories {
        def nexusUsername = configProperty("NEXUS_USERNAME", "nexusUsername")
        def nexusPassword = configProperty("NEXUS_PASSWORD", "nexusPassword")
        def nexusContextUrl = configProperty("NEXUS_CONTEXT_URL", 'nexusContextUrl')

        maven {
            name = "nexusMavenSnapshots"
            credentials {
                username nexusUsername
                password nexusPassword
            }
            url = "$nexusContextUrl/maven-snapshots"
        }

        maven {
            name = "nexusMavenReleases"
            credentials {
                username nexusUsername
                password nexusPassword
            }
            url = "$nexusContextUrl/maven-releases"
        }
    }
}

if (ext.isReleasePluginApplied) {
    release {
        tagTemplate = 'v${version}'
        preTagCommitMessage = 'Release: '
        newVersionCommitMessage = 'Version bump commit: '

        git {
            requireBranch = 'release'
            pushToRemote = 'origin'
        }
    }

    if (ext['release.uploadAfterRelease']) {
        // Automatically upload artifacts after `./gradlew release`
        afterReleaseBuild.dependsOn ext.isSnapshotVersion
                ? publishAllPublicationsToNexusMavenSnapshotsRepository
                : publishAllPublicationsToNexusMavenReleasesRepository
    }
}