ext {
    isReleasePluginApplied = project.pluginManager.hasPlugin('com.google.cloud.artifactregistry.gradle-plugin')
    isJavaPluginApplied = project.pluginManager.hasPlugin('java')
    isJavaPlatformPluginApplied = project.pluginManager.hasPlugin('java-platform')
    isShadowPluginApplied = project.pluginManager.hasPlugin('com.github.johnrengelman.shadow')
    isSnapshotVersion = project.version.endsWith('-SNAPSHOT')
    shouldPublishShadow = ext.find('shouldPublishShadow') ?: false
    shouldPublishTests = ext.find('shouldPublishTests') ?: false
    shouldPublishTestSources = ext.find('shouldPublishTestSources') ?: false
    uploadAfterRelease = ext.has('uploadAfterRelease') ? ext.get('uploadAfterRelease') : true
}

if (project.ext.isJavaPluginApplied) {
    task sourcesJar(type: Jar) {
        from sourceSets.main.allJava
        archiveClassifier = "sources"
    }

    task javadocJar(type: Jar) {
        from javadoc
        archiveClassifier = "javadoc"
    }

    if (project.ext.shouldPublishTests) {
        task testsJar(type: Jar) {
            from sourceSets.test.output.classesDirs
            archiveClassifier = "tests"
        }
    }

    if (project.ext.shouldPublishTestSources) {
        task testSourcesJar(type: Jar) {
            from sourceSets.test.allJava
            archiveClassifier = "test-sources"
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = project.name
            if (project.ext.shouldPublishShadow && project.ext.isShadowPluginApplied) {
                project.shadow.component(publication)
            } else {
                from project.ext.isJavaPlatformPluginApplied ? components.javaPlatform : components.java
            }

            if (project.ext.isJavaPluginApplied) {
                artifact sourcesJar
                if (!project.ext.isSnapshotVersion) {
                    artifact javadocJar
                }

                if (project.ext.shouldPublishTests) {
                    artifact testsJar
                }

                if (project.ext.shouldPublishTestSources) {
                    artifact testSourcesJar
                }
            }
        }
    }

repositories {
    maven {
        def snapshotUrl = "artifactregistry://europe-west6-maven.pkg.dev/hybrid-chess-313408/maven-snapshot"
        def internalUrl = "artifactregistry://europe-west6-maven.pkg.dev/hybrid-chess-313408/maven-internal"

        url = version.endsWith('SNAPSHOT') ? snapshotUrl : internalUrl
    }
}
